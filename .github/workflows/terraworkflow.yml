name: 'Terraform'
on: 
  workflow_dispatch:
   inputs:
    terraform_action:
     type: choice
     description: select terraform action
     options:
        - code_checkout
        - apply
        - destroy
     required: true
  push:
   branches: ["code_branch"]

 
jobs:
    terraform_deploy:
        name: 'Terraform'
        env:
            AWS_ACCESS_KEY_ID : ${{secrets.AWS_ACCESS_KEY_ID}}
            AWS_SECRET_ACCESS_KEY: ${{secrets.AWS_SECRET_ACCESS_KEY}}
        runs-on: ubuntu-latest
        environment: production

        steps: 
    # checkout the repo to github actions runner
         - name: Code checkout
           if: ${{github.event.inputs.terraform_action == 'code_checkout'}}
           uses: actions/checkout@v3
          
         - name: Code checkout with plan and apply
           if: ${{github.event.inputs.terraform_action != 'code_checkout'}}
           uses: actions/checkout@v3


         - name: Terraform init
           if: ${{github.event.inputs.terraform_action != 'code_checkout'}}
           uses: hashicorp/terraform-github-actions@master
           with:
            tf_actions_version: 0.14.3
            tf_actions_subcommand: 'init'
            tf_actions_working_dir: 'terra_code_files'
            tf_actions_comment: true
            args: '-var="instance_type=t2.micro"'

         - name: Terraform plan
           if: ${{github.event.inputs.terraform_action != 'code_checkout'}}
           uses: hashicorp/terraform-github-actions@master
           with:
            tf_actions_version: 0.14.3
            tf_actions_subcommand: 'plan'
            tf_actions_working_dir: 'terra_code_files'
            tf_actions_comment: true
            args: '-var="instance_type=t2.micro"'

         - name: Terraform apply
           if: ${{github.event.inputs.terraform_action == 'apply'}}
           uses: hashicorp/terraform-github-actions@master
           with:
            tf_actions_version: 0.14.3
            tf_actions_subcommand: ${{github.event.inputs.terraform_action}}
            tf_actions_working_dir: 'terra_code_files'
            tf_actions_comment: true
            args: '-auto-approve -var="instance_type=t2.micro"'
    
         - name: Terraform destroy
           if: ${{github.event.inputs.terraform_action == 'destroy'}}
           uses: hashicorp/terraform-github-actions@master
           with:
            tf_actions_version: 0.14.3
            tf_actions_subcommand : ${{github.event.inputs.terraform_action}}
            tf_actions_working_dir: 'terra_code_files'
            tf_actions_comment: true
            args: '-auto-approve -var="instance_type=t2.micro"'

            # When dong terraform destroy ,it's not destroying the instance which we have created instead of that it implicity creating an instance and destorying that instance,
            # and instance which has been created with apply commnad still be running in your aws console